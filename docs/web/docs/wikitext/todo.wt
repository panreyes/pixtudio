== Fixing existing pages ==
Lot of things to do, but luckily they are pretty easy.

Things to be done:
* Every reference to "Fenix" needs to be adjusted and altered to "Bennu".
* Code must be adjusted to import modules.
* Function, locals, globals, constants, etc in modules need to have their module navbox at the bottom of the page, like:
<pre>
{{Moduledocbox
  | module = Mod_math
}}
</pre>
* The old style using a chapter ''Definition'' needs to be separated in ''Syntax'' and ''Description''. [http://wiki.bennugd.org/index.php?title=Map_put&diff=7711&oldid=6604 Here's an example]

== Adding content ==
Don't know where to start? Checkout the [[Special:WantedPages|most wanted]] page.

The DPL part of the site will be done by the administrators of the wiki, so don't worry about that. Just copy an existing page and use it as a template.

== List of functions known to not be completely documented==
Below you can find a list of undocumented/partially documented BennuGD features as reported by forum user Kloppix. Comments in Spanish will soon be translated into English and all of the following should be checked.
----------------------------------------------------------------------------------------------------------------------

<strike>[[Mod_cd]]</strike> DONE
 
<strike>*Globals
  STRUCT cdinfo</strike>

--------------------------------------------------------------------------------------
<strike>[[Mod_dir]]</strike> DONE

<strike>*Functions:
  STRING DIRREAD(INTEGER)</strike>

--------------------------------------------------------------------------------------
<strike>[[Mod_draw]]</strike> DONE

<strike>*Functions:
  INT PUT_PIXEL(INTEGER, INTEGER, INTEGER)
  INT GET_PIXEL(INTEGER, INTEGER)</strike>

--------------------------------------------------------------------------------------
<strike>[[Mod_effects]]</strike> DONE

<strike>*Constants::
  INT GSCALE_RGB = 0
  INT GSCALE_R = 1
  INT GSCALE_G = 2
  INT GSCALE_B = 3
  INT GSCALE_RG = 4
  INT GSCALE_RB = 5
  INT GSCALE_GB = 6
  INT GSCALE_OFF = -1

*Functions:
  INT FILTER(INTEGER, INTEGER, POINTER)</strike>


--------------------------------------------------------------------------------------
 <strike>[[Mod_file]]</strike> DONE
<strike>*Functions:</strike>
  <strike>UNDEFINED FREWIND(INTEGER)</strike>
  <strike>INT FILE_EXISTS(STRING)</strike>
  <strike>INT FREMOVE(STRING)</strike>
  <strike>INT FMOVE(STRING, STRING)</strike>


--------------------------------------------------------------------------------------
 <strike>[[Mod_flic]]</strike> DONE

<strike>*Functions:</strike>
  <strike>INT START_FLI(STRING, INTEGER, INTEGER)</strike>
  <strike>INT END_FLI()</strike>
  <strike>INT FRAME_FLI()</strike>
  <strike>INT RESET_FLI()</strike>
  <strike>INT FLI_START(STRING, INTEGER, INTEGER)</strike>
  <strike>INT FLI_START(STRING, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER)</strike>
  <strike>INT FLI_END(INTEGER)</strike>
  <strike>INT FLI_FRAME(INTEGER)</strike>
  <strike>INT FLI_RESET(INTEGER)</strike>
  <strike>INT FLI_PARAMS(INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER)</strike>
  <strike>INT FLI_MOVE(INTEGER, INTEGER, INTEGER)</strike>
  <strike>INT FLI_ANGLE(INTEGER, INTEGER)</strike>
  <strike>INT FLI_SIZE(INTEGER, INTEGER)</strike>
  <strike>INT FLI_FLAGS(INTEGER, INTEGER)</strike>
  <strike>INT FLI_Z(INTEGER, INTEGER)</strike>
  <strike>INT FLI_GETINFO(INTEGER, POINTER, POINTER, POINTER, POINTER, POINTER, POINTER, POINTER, POINTER, POINTER)</strike>

--------------------------------------------------------------------------------------
[[Mod_joy]]

*Functions:
  <strike>INT JOY_GETPOSITION(INTEGER)</strike>
  <strike>INT JOY_GETPOSITION(INTEGER, INTEGER)</strike>
  INT JOY_GETACCEL(POINTER, POINTER, POINTER)
  INT JOY_GETACCEL(INTEGER, POINTER, POINTER, POINTER)
  <strike>INT NUMBER_JOY()</strike>
  <strike>INT SELECT_JOY(INTEGER)</strike>
  <strike>INT GET_JOY_BUTTON(INTEGER)</strike>
  <strike>INT GET_JOY_BUTTON(INTEGER, INTEGER)</strike>

# Según entendí, en la Wiki se dice que JOY_GETBALL acepta 2 o 3 parámetros en lugar de 3 o 4. [[Joy_getball)
# INT JOY_GETBALL(INTEGER, POINTER, POINTER)
# INT JOY_GETBALL(INTEGER, INTEGER, POINTER, POINTER)


--------------------------------------------------------------------------------------
<strike>[[Mod_m7]]</strike> DONE

<strike>*Globals:
  STRUCT m7[9]</strike>

*Functions:
  <strike>INT MODE7_START(INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER)</strike>
  <strike>INT MODE7_START(INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER)</strike>
  <strike>INT MODE7_STOP(INTEGER)</strike>
  <strike>INT START_MODE7(INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER)</strike>
  <strike>INT START_MODE7(INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER)</strike>
  <strike>INT STOP_MODE7(INTEGER)</strike>

--------------------------------------------------------------------------------------
[[Mod_map]]

<strike>*Constants::

  INT G_Y_CENTER = 3
  INT B_CLEAR = 1
  INT CHARSET_ISO8859 = 0
  INT CHARSET_CP850 = 1
  INT NFB_VARIABLEWIDTH = 0
  INT NFB_FIXEDWIDTH = 1</strike>

*Functions:

  <strike>INT MAP_NEW(INTEGER, INTEGER, INTEGER, INTEGER) #Aparece en la Wiki pero dice que sólo acepta 3 parámetros en lugar de 3 o 4 [[Map_new]] #parcialmente hecho, falta detallar flags</strike>
  <strike>INT MAP_DEL(INTEGER, INTEGER)</strike>
  <strike>POINTER MAP_BUFFER(INTEGER, INTEGER)</strike>
  <strike>INT FPG_LOAD(STRING, POINTER)     # Según la WIKI acepta sólo 1 parámetro</strike>
  <strike>INT FPG_DEL(INTEGER)</strike>
  <strike>INT PAL_NEW()</strike>
  <strike>INT PAL_DEL(INTEGER)</strike>
  <strike>INT PAL_UNLOAD(INTEGER)</strike>
  <strike>INT PAL_CLONE(INTEGER)</strike>
  <strike>INT PAL_REFRESH()</strike>
  <strike>INT PAL_REFRESH(INTEGER)</strike>
  <strike>INT PAL_MAP_GETID(INTEGER, INTEGER)</strike>
  <strike>INT PAL_MAP_ASSIGN(INTEGER, INTEGER, INTEGER)</strike>
  <strike>INT PAL_MAP_REMOVE(INTEGER, INTEGER)</strike>
  <strike>INT PAL_GET(INTEGER, INTEGER, POINTER)</strike>
  <strike>INT PAL_GET(INTEGER, INTEGER, INTEGER, POINTER)</strike>
  INT PAL_SYS_SET(INTEGER)
  INT PAL_SYS_SET(POINTER)
  <strike>INT PAL_SET(INTEGER, INTEGER, POINTER)</strike>
  <strike>INT PAL_SET(INTEGER, INTEGER, INTEGER, POINTER)</strike>
  <strike>INT PAL_SAVE(STRING)</strike>
  <strike>INT PAL_SAVE(STRING, INTEGER)</strike>
  <strike>INT COLORS_SET(INTEGER, INTEGER, POINTER)</strike>
  <strike>INT COLORS_SET(INTEGER, INTEGER, INTEGER, POINTER)</strike>
  <strike>INT COLORS_GET(INTEGER, INTEGER, POINTER)</strike>
  <strike>INT COLORS_GET(INTEGER, INTEGER, INTEGER, POINTER)</strike>
  <strike>INT PALETTE_ROLL(INTEGER, INTEGER, INTEGER)</strike>
  <strike>INT PALETTE_CONVERT(INTEGER, INTEGER, POINTER)</strike>
  <strike>INT COLOR_FIND(BYTE, BYTE, BYTE)</strike>
  <strike>INT RGB(BYTE, BYTE, BYTE, INTEGER)             #Según Wiki sólo acepta 3 parámetros en lugar de 3 o 4</strike>   
  <strike>INT RGBA(BYTE, BYTE, BYTE, BYTE, INTEGER)   #Según Wiki sólo acepta 4 parámetros en lugar de 4 o 5</strike>   
  <strike>INT RGB_GET(INTEGER, POINTER, POINTER, POINTER, INTEGER)</strike>
  <strike>INT RGB_GET(INTEGER, POINTER, POINTER, POINTER)</strike>
  <strike>INT RGBA_GET(INTEGER, POINTER, POINTER, POINTER, POINTER, INTEGER)</strike>
  <strike>INT RGBA_GET(INTEGER, POINTER, POINTER, POINTER, POINTER)</strike>
  <strike>INT MAP_INFO_SET(INTEGER, INTEGER, INTEGER, INTEGER)</strike>
  <strike>INT MAP_INFO_GET(INTEGER, INTEGER, INTEGER)</strike>
  <strike>INT MAP_INFO(INTEGER, INTEGER, INTEGER)</strike>
  <strike>INT GRAPHIC_SET(INTEGER, INTEGER, INTEGER, INTEGER)</strike>
  <strike>INT FNT_NEW(INTEGER, INTEGER)                    # Según la Wiki solo acepta 1 parámetro</strike>
  <strike>INT FNT_NEW(INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER)</strike>
  <strike>INT BDF_LOAD(STRING)</strike>
  <strike>INT PCX_LOAD(STRING)</strike>
  <strike>INT NEW_MAP(INTEGER, INTEGER, INTEGER)</strike>
  <strike>INT LOAD_MAP(STRING)</strike>
  <strike>INT UNLOAD_MAP(INTEGER, INTEGER)</strike>
  <strike>INT SAVE_MAP(INTEGER, INTEGER, STRING)</strike>
  <strike>INT NEW_PAL()</strike>
  <strike>INT LOAD_PAL(STRING)</strike>
  <strike>INT UNLOAD_PAL(INTEGER)</strike>
  <strike>INT SAVE_PAL(STRING)</strike>
  <strike>INT SAVE_PAL(STRING, INTEGER)</strike>
  <strike>INT SET_COLORS(INTEGER, INTEGER, POINTER)</strike>
  <strike>INT SET_COLORS(INTEGER, INTEGER, INTEGER, POINTER)</strike>
  <strike>INT GET_COLORS(INTEGER, INTEGER, POINTER)</strike>
  <strike>INT GET_COLORS(INTEGER, INTEGER, INTEGER, POINTER)</strike>
  <strike>INT ROLL_PALETTE(INTEGER, INTEGER, INTEGER)</strike>
  <strike>INT CONVERT_PALETTE(INTEGER, INTEGER, POINTER)</strike>
  <strike>INT FIND_COLOR(BYTE, BYTE, BYTE)</strike>
  <strike>INT GET_RGB(INTEGER, POINTER, POINTER, POINTER, INTEGER)</strike>
  <strike>INT GET_RGBA(INTEGER, POINTER, POINTER, POINTER, POINTER, INTEGER)</strike>
  <strike>INT GET_RGB(INTEGER, POINTER, POINTER, POINTER)</strike>
  <strike>INT GET_RGBA(INTEGER, POINTER, POINTER, POINTER, POINTER)</strike>
  <strike>INT NEW_FPG()</strike>
  <strike>INT LOAD_FPG(STRING)</strike>
  <strike>INT LOAD_FPG(STRING, POINTER)</strike>
  <strike>INT SAVE_FPG(INTEGER, STRING)</strike>
  <strike>INT UNLOAD_FPG(INTEGER)</strike>
  <strike>INT GET_POINT(INTEGER, INTEGER, INTEGER, POINTER, POINTER)</strike>
  <strike>INT SET_POINT(INTEGER, INTEGER, INTEGER, INTEGER, INTEGER)</strike>
  <strike>INT SET_CENTER(INTEGER, INTEGER, INTEGER, INTEGER)</strike>
  <strike>INT NEW_FNT(INTEGER)</strike>
  <strike>INT NEW_FNT(INTEGER, INTEGER)</strike>
  <strike>INT NEW_FNT(INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER)</strike>
  <strike>INT LOAD_FNT(STRING)</strike>
  <strike>INT UNLOAD_FNT(INTEGER)</strike>
  <strike>INT SAVE_FNT(INTEGER, STRING)</strike>
  <strike>INT LOAD_BDF(STRING)</strike>
  <strike>INT GET_GLYPH(INTEGER, INTEGER)</strike> 
  <strike>INT SET_GLYPH(INTEGER, INTEGER, INTEGER, INTEGER)</strike>
  <strike>INT LOAD_PNG(STRING)</strike>
  <strike>INT LOAD_PCX(STRING)</strike>
  <strike>INT SAVE_PNG(INTEGER, INTEGER, STRING)</strike>


----------------------------------------------------------------------------------------------------------------
MOD_MATHI      # En la Wiki solo hay MOD_MATH. Nada de MOD_MATHI  Las funciones de los 2 módulos son las mismas pero trabajan con otro tipo de variables. No se que hacer acá.


----------------------------------------------------------------------------------------------------------------
<strike>[[Mod_math]] </strike> DONE

<strike>*Functions:</strike>
  <strike>FLOAT ATAN2(FLOAT, FLOAT)</strike>
  <strike>INT ISINF(FLOAT)</strike>
  <strike>INT ISNAN(FLOAT)</strike>
  <strike>INT FINITE(FLOAT)</strike>
  <strike>INT NEAR_ANGLE(INTEGER, INTEGER, INTEGER)</strike>


----------------------------------------------------------------------------------------------------------------
<strike>[[Mod_mem]]</strike> DONE

<strike>*Functions:</strike>
  <strike>POINTER MEM_CALLOC(INTEGER, INTEGER)</strike>
  <strike>POINTER MEM_ALLOC(INTEGER)</strike>
  <strike>INT MEM_FREE(POINTER)</strike>
  <strike>POINTER MEM_REALLOC(POINTER, INTEGER)</strike>
  <strike>INT MEM_CMP(POINTER, POINTER, INTEGER)</strike>
  <strike>INT MEM_SET(POINTER, BYTE, INTEGER)</strike>
  <strike>INT MEM_SETW(POINTER, WORD, INTEGER)</strike>
  <strike>INT MEM_SETI(POINTER, INTEGER, INTEGER)</strike>
  <strike>INT MEM_COPY(POINTER, POINTER, INTEGER)</strike>
  <strike>INT MEM_MOVE(POINTER, POINTER, INTEGER)</strike>
  <strike>INT MEM_AVAILABLE()</strike>
  <strike>INT MEM_TOTAL()</strike>
  <strike>POINTER CALLOC(INTEGER, INTEGER)</strike>


----------------------------------------------------------------------------------------------------------------
<strike>[[Mod_path]]</strike> DONE

<strike>*Functions:
  INT PATH_FIND(INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER)
  INT PATH_GETXY(POINTER, POINTER)
  INT PATH_WALL(INTEGER)</strike>


----------------------------------------------------------------------------------------------------------------
<strike>[[Mod_proc]]</strike> DONE

<strike>*Constants::</strike>
  <strike>INT S_FORCE = 50</strike> Internal use
  <strike>INT S_TREE = 100</strike> Internal use
  <strike>INT S_KILL_TREE = 100</strike>
  <strike>INT ALL_PROCESS = 0</strike> Internal use

<strike>Locals:</strike> Internal use
  <strike>STRUCT mod_proc_reserved

*Functions:
  INT GET_STATUS(INTEGER)</strike>


----------------------------------------------------------------------------------------------------------------
<strike>[[Mod_regex]]</strike> DONE

<strike>*Globals:
  STRING regex_reg[15];


*Functions:
  INT REGEX(STRING, STRING)
  STRING REGEX_REPLACE(STRING, STRING, STRING)
  STRING JOIN(STRING, POINTER, INTEGER)</strike>


----------------------------------------------------------------------------------------------------------------
<strike>[[Mod_say]]</strike> DONE

<strike>*Functions:
  UNDEFINED SAY_FAST(STRING)</strike>

----------------------------------------------------------------------------------------------------------------
<strike>[[Mod_screen]]</strike> DONE

<strike>*Functions:</strike>
  <strike>INT DEFINE_REGION(INTEGER, INTEGER, INTEGER, INTEGER, INTEGER)</strike>
  <strike>INT OUT_REGION(INTEGER, INTEGER)</strike>
  <strike>INT PUT_SCREEN(INTEGER, INTEGER)</strike>
  <strike>INT CLEAR_SCREEN()</strike>
  <strike>INT GET_SCREEN()</strike>


----------------------------------------------------------------------------------------------------------------
<strike>[[Mod_scroll]]</strike> DONE

<strike>*Functions:</strike>
  <strike>INT SCROLL_START(INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER)</strike>
  <strike>INT SCROLL_START(INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER)</strike>
  <strike>INT SCROLL_STOP(INTEGER)</strike>
  <strike>INT SCROLL_MOVE(INTEGER)</strike>
  <strike>INT START_SCROLL(INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER)</strike>
  <strike>INT START_SCROLL(INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER)</strike>
  <strike>INT STOP_SCROLL(INTEGER)</strike>
  <strike>INT MOVE_SCROLL(INTEGER)</strike>


----------------------------------------------------------------------------------------------------------------
<strike>[[Mod_sound]]</strike> DONE

<strike>*Functions:</strike>
  <strike>INT SOUND_INIT()</strike>
  <strike>INT SOUND_CLOSE()</strike>
  <strike>INT STOP_SONG()</strike>
  <strike>INT STOP_WAV(INTEGER)</strike>
  <strike>INT PAUSE_WAV(INTEGER)</strike>
  <strike>INT RESUME_WAV(INTEGER)</strike>
  <strike>INT IS_PLAYING_WAV(INTEGER)</strike>
  <strike>INT FADE_MUSIC_IN(INTEGER, INTEGER, INTEGER)</strike>
  <strike>INT FADE_MUSIC_OFF(INTEGER)</strike>
  <strike>INT SET_CHANNEL_VOLUME(INTEGER, INTEGER)</strike>
  <strike>INT RESERVE_CHANNELS(INTEGER)</strike>
  <strike>INT SET_PANNING(INTEGER, INTEGER, INTEGER)</strike>
  <strike>INT SET_POSITION(INTEGER, INTEGER, INTEGER)</strike>
  <strike>INT SET_DISTANCE(INTEGER, INTEGER)</strike>
  <strike>INT REVERSE_STEREO(INTEGER, INTEGER)</strike>
  <strike>INT PLAY_WAV(INTEGER, INTEGER, INTEGER)</strike>
  <strike>INT SET_MUSIC_POSITION(FLOAT)</strike>

  <strike># INT UNLOAD_SONG(POINTER)
  # INT UNLOAD_WAV(POINTER)  
  # Las funciones de arriba aceptan INT y POINTER, pero en la wiki sólo sale lo primero. No se si es un error o es normal puesto que no entiendo mucho de pointers</strike> 


----------------------------------------------------------------------------------------------------------------
<strike>[[Mod_string]]</strike> DONE

<strike>*Functions:
  INT STRLEN(STRING)
  STRING FORMAT(INTEGER)
  STRING FORMAT(FLOAT)
  STRING FORMAT(FLOAT, INTEGER)</strike>


----------------------------------------------------------------------------------------------------------------
<strike>[[Mod_text]]</strike> DONE

<strike>*Constants::
  INT ALL_TEXT = 0</strike>


----------------------------------------------------------------------------------------------------------------
<strike>[[Mod_timers]]</strike> DONE

<strike>*Globals:
  timer[9];</strike>


----------------------------------------------------------------------------------------------------------------
<strike>[[Mod_video]]</strike> DONE

<strike>*Functions:</strike>
  <strike>INT SET_MODE(INTEGER) # Segun la wiki acepta 2,3 o 4 parámetros. pero no dice que también 1 sólo (O eso entendí)</strike>

<strike>*Module Dependency:</strike>
  <strike>libgrbase</strike>
  <strike>libvideo</strike>
  <strike>librender</strike>


----------------------------------------------------------------------------------------------------------------
<strike>[[Mod_wm]]</strike> DONE

<strike>*Functions:
  INT SET_WINDOW_POS(INTEGER, INTEGER)</strike>