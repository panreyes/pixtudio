#---------------------------------------------------------------------------------
# Clear the implicit built in rules
#---------------------------------------------------------------------------------
.SUFFIXES:
#---------------------------------------------------------------------------------
#---------------------------------------------------------------------------------
%.a:
#---------------------------------------------------------------------------------
	@echo $(notdir $@)
	@rm -f $@
	@$(AR) -rc $@ $^

#---------------------------------------------------------------------------------
%.o: %.cpp
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -c $< -o $@ $(ERROR_FILTER)

#---------------------------------------------------------------------------------
%.o: %.c
	@echo $(notdir $<)
	@$(CC) $(CFLAGS) -c $< -o $@ $(ERROR_FILTER)

#---------------------------------------------------------------------------------
%.o: %.m
	@echo $(notdir $<)
	@$(CC) $(OBJCFLAGS) -c $< -o $@ $(ERROR_FILTER)

#---------------------------------------------------------------------------------
%.o: %.s
	@echo $(notdir $<)
	@$(CC) -x assembler-with-cpp $(ASFLAGS) -c $< -o $@ $(ERROR_FILTER)

#---------------------------------------------------------------------------------
%.o: %.S
	@echo $(notdir $<)
	@$(CC) -x assembler-with-cpp $(ASFLAGS) -c $< -o $@ $(ERROR_FILTER)

#---------------------------------------------------------------------------------
%.elf:
	@echo linking ... $(notdir $@)
	$(LD)  $^ $(LDFLAGS) $(LIBPATHS) $(LIBS) -o $@

#---------------------------------------------------------------------------------
# canned command sequence for binary data
#---------------------------------------------------------------------------------
define bin2o
	bin2s -a 32 $< | $(AS) -o $(@)
	echo "extern const u8" `(echo $(<F) | sed -e 's/^\([0-9]\)/_\1/' | tr . _)`"_end[];" > `(echo $(<F) | tr . _)`.h
	echo "extern const u8" `(echo $(<F) | sed -e 's/^\([0-9]\)/_\1/' | tr . _)`"[];" >> `(echo $(<F) | tr . _)`.h
	echo "extern const u32" `(echo $(<F) | sed -e 's/^\([0-9]\)/_\1/' | tr . _)`_size";" >> `(echo $(<F) | tr . _)`.h
endef

#---------------------------------------------------------------------------------
# TARGET is the name of the output
# BUILD is the directory where object files & intermediate files will be placed
# SOURCES is a list of directories containing source code
# INCLUDES is a list of directories containing extra header files
#---------------------------------------------------------------------------------
TARGET		:=	bgdrtm
BUILD     :=	build
SOURCES		:=	src
INCLUDES	:=	../../core/include \
	../../core/bgdrtm/include/ \
	../../3rdparty/SDL/include/ \
	../../3rdparty/SDL_mixer/ \
	../../3rdparty/stb/ \
	../../modules/libbgload/ \
	../../modules/mod_say/ \
	../../modules/mod_string/ \
	../../modules/mod_math/ \
	../../modules/mod_mem/ \
	../../modules/mod_time/ \
	../../modules/mod_file/ \
	../../modules/mod_sound/ \
	../../modules/libsdlhandler/ \
	../../modules/mod_gamecontroller/ \
	../../modules/libkey/ \
	../../modules/mod_key/ \
	../../modules/mod_proc/ \
	../../modules/mod_sort/ \
	../../modules/mod_timers/ \
	../../modules/libgrbase/ \
	../../modules/libblit/ \
	../../modules/libvideo/ \
	../../modules/librender/ \
	../../modules/mod_video/ \
	../../modules/libmouse/ \
	../../modules/mod_mouse/ \
	../../modules/mod_map/ \
	../../modules/libfont/ \
	../../modules/mod_dir/ \
	../../modules/libtext/ \
	../../modules/mod_text/ \
	../../modules/mod_rand/ \
	../../modules/mod_grproc/ \
	../../modules/libscroll/ \
	../../modules/mod_scroll/ \
	../../modules/libdraw/ \
	../../modules/mod_draw/ \
	../../modules/mod_screen/ \
	../../modules/mod_path/ \
	../../modules/mod_blendop/ \
	../../modules/libwm/ \
	../../modules/mod_wm/ \
	../../modules/mod_sys/ \
	../../modules/mod_regex/ \
    ../../modules/mod_fsock/

#---------------------------------------------------------------------------------
# options for code generation
#---------------------------------------------------------------------------------

CFLAGS		=	-m32 -g -Wall -D__BGDRTM__ -D__MONOLITHIC__ -DNO_ZLIB -DNO_MODIMAGE \
	-DNO_MODICONV -DNO_MODCHIPMUNK -DNO_MODMULTI -DNO_MODCURL \
	-DNO_MODSENSOR -DNO_MODIAP -DNO_MODTHEORA -DVERSION='"1.0.0"' $(MACHDEP) $(INCLUDE) \
	-finline-functions -fno-strict-aliasing
CXXFLAGS	=	-m32 -save-temps -Xassembler -aln=$@.lst $(CFLAGS)
LDFLAGS		=	-m32 -g $(MACHDEP)

#---------------------------------------------------------------------------------
# any extra libraries we wish to link with the project
#---------------------------------------------------------------------------------
ifeq ($(OS),Windows_NT)
	EXTRA_LIBS = -lmingw32 -mwindows -lwsock32
else
	EXTRA_LIBS = -lc
endif
LIBS := $(EXTRA_LIBS)
#---------------------------------------------------------------------------------
# list of directories containing libraries, this must be the top level containing
# include and lib
#---------------------------------------------------------------------------------
LIBDIRS	:= $(CURDIR)

#---------------------------------------------------------------------------------
# no real need to edit anything past this point unless you need to add additional
# rules for different file extensions
#---------------------------------------------------------------------------------
ifneq ($(BUILD),$(notdir $(CURDIR)))
#---------------------------------------------------------------------------------

export OUTPUT	:=	$(CURDIR)/$(TARGETDIR)/$(TARGET)
export VPATH	:=	$(foreach dir,$(SOURCES),$(CURDIR)/$(dir))
export DEPSDIR	:=	$(CURDIR)/$(BUILD)

#---------------------------------------------------------------------------------
# automatically build a list of object files for our project
#---------------------------------------------------------------------------------
CFILES		:=	../../../core/bgdrtm/src/copy.c \
	../../../core/bgdrtm/src/dcbr.c \
	../../../core/bgdrtm/src/dirs.c \
	../../../core/bgdrtm/src/instance.c \
	../../../core/bgdrtm/src/interpreter.c \
	../../../core/bgdrtm/src/misc.c \
	../../../core/bgdrtm/src/strings.c \
	../../../core/bgdrtm/src/sysprocs.c \
	../../../core/bgdrtm/src/varspace_file.c \
	../../../core/bgdrtm/src/fmath.c \
	../../../core/common/debug.c \
	../../../core/common/files.c \
	../../../core/common/xctype.c \
	../../../modules/libbgload/bgload.c \
	../../../modules/mod_say/mod_say.c \
	../../../modules/mod_string/mod_string.c \
	../../../modules/mod_math/mod_math.c \
    ../../../modules/mod_mem/mod_mem.c \
	../../../modules/mod_time/mod_time.c \
	../../../modules/mod_file/mod_file.c \
	../../../modules/mod_sound/mod_sound.c \
	../../../modules/libsdlhandler/libsdlhandler.c \
	../../../modules/mod_gamecontroller/mod_gamecontroller.c \
	../../../modules/libkey/libkey.c \
	../../../modules/mod_key/mod_key.c \
	../../../modules/mod_proc/mod_proc.c \
	../../../modules/mod_sort/mod_sort.c \
	../../../modules/mod_timers/mod_timers.c \
	../../../modules/libgrbase/g_bitmap.c \
	../../../modules/libgrbase/g_clear.c \
	../../../modules/libgrbase/g_grlib.c \
	../../../modules/libgrbase/g_pal.c \
	../../../modules/libgrbase/g_blendop.c \
	../../../modules/libgrbase/g_conversion.c \
	../../../modules/libgrbase/libgrbase.c \
	../../../modules/libblit/g_blit.c \
	../../../modules/libblit/g_pixel.c \
	../../../modules/libblit/libblit.c \
	../../../modules/libvideo/g_regions.c \
	../../../modules/libvideo/g_video.c \
	../../../modules/librender/g_fade.c \
	../../../modules/librender/g_frame.c \
	../../../modules/librender/g_instance.c \
	../../../modules/librender/g_object.c \
	../../../modules/librender/g_rects.c \
	../../../modules/librender/g_screen.c \
	../../../modules/librender/librender.c \
	../../../modules/mod_video/mod_video.c \
	../../../modules/libmouse/libmouse.c \
	../../../modules/mod_map/file_fnt.c \
	../../../modules/mod_map/file_fpg.c \
	../../../modules/mod_map/file_map.c \
	../../../modules/mod_map/file_pal.c \
	../../../modules/mod_map/file_pcx.c \
	../../../modules/mod_map/file_png.c \
	../../../modules/mod_map/mod_map.c \
	../../../modules/libfont/libfont.c \
	../../../modules/mod_dir/mod_dir.c \
	../../../modules/libtext/libtext.c \
	../../../modules/mod_text/mod_text.c \
	../../../modules/mod_rand/mod_rand.c \
	../../../modules/mod_grproc/mod_grproc.c \
	../../../modules/libscroll/libscroll.c \
	../../../modules/mod_scroll/mod_scroll.c \
	../../../modules/libdraw/libdraw.c \
	../../../modules/mod_draw/mod_draw.c \
	../../../modules/mod_screen/mod_screen.c \
	../../../modules/mod_path/mod_path.c \
	../../../modules/mod_blendop/mod_blendop.c \
	../../../modules/libwm/libwm.c \
	../../../modules/mod_wm/mod_wm.c \
	../../../modules/mod_sys/mod_sys.c \
	../../../modules/mod_regex/mod_regex.c \
	../../../modules/mod_regex/regex.c \
    ../../../modules/mod_fsock/fsock.c

#---------------------------------------------------------------------------------
# use CXX for linking C++ projects, CC for standard C
#---------------------------------------------------------------------------------
export LD	:=	$(CC)

export OFILES	:=	$(CPPFILES:.cpp=.o) $(CFILES:.c=.o) \
					$(sFILES:.s=.o) $(SFILES:.S=.o)

#---------------------------------------------------------------------------------
# build a list of include paths
#---------------------------------------------------------------------------------
export INCLUDE	:=	$(foreach dir,$(INCLUDES),-I$(CURDIR)/$(dir)) \
					$(foreach dir,$(LIBDIRS),-I$(dir)/include) \
					-I$(CURDIR)/$(BUILD) \
					-I/opt/local/include \
					-I/opt/local/include/SDL2 \
					-I/usr/include \
					-I/usr/include/SDL2

#---------------------------------------------------------------------------------
# build a list of library paths
#---------------------------------------------------------------------------------
export LIBPATHS	:=	$(foreach dir,$(LIBDIRS),-L$(dir)/lib) \
					-L/opt/local/lib

export OUTPUT	:=	$(CURDIR)/$(TARGET)
.PHONY: $(BUILD) clean

#---------------------------------------------------------------------------------
$(BUILD):
	@[ -d $@ ] || mkdir -p $@
	make -C $(BUILD) -f $(CURDIR)/Makefile.bgdrtm

#---------------------------------------------------------------------------------
clean:
	@echo clean ...
	@rm -fr $(BUILD) $(TARGET).a

#---------------------------------------------------------------------------------
else

#---------------------------------------------------------------------------------
# main targets
#---------------------------------------------------------------------------------
$(OUTPUT).a: $(OFILES)
	@echo Gonna link $(OUTPUT).a
	@ar crs $@ $(OFILES)
	@echo done linking

#---------------------------------------------------------------------------------
endif
#---------------------------------------------------------------------------------
